name: Pipeline CI/CD

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Artifact name (app-<branch>-<commit_sha>-<run_number>-try<run_attempt>) (ex: app-develop-81ab3a56817fg17q14752bca-1-try2)'
        required: true
      target_environment:
        description: 'Choose environment'
        required: true
        default: development
        type: choice
        options:
          - staging
          - sandbox
          - production
  schedule:
    - cron: '00 08 * * *'  # Executa todos os dias às 8h da manhã (UTC)
  push:
    branches:
      - develop

env:
  MY_VARIABLE_ENV: "Hello World!!!!!"

jobs:
  print:
    runs-on: [self-hosted, devsecops]       # Seleciona os Self-Hosted Runners através de suas labels (pode ser também runners hospedados pelo github: ubuntu-latest, windows-latest, macos-latest)
    environment: ${{ inputs.target_environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Print variable and secret
        env:
          MY_VARIABLE_STEP: "Hello World!"
        run: |
          echo "Variable is ${{ vars.MY_VARIABLE }} and secret is ${{ secrets.MY_SECRET }} and env variable is $MY_VARIABLE_ENV and step variable is $MY_VARIABLE_STEP"
          
      - name: Show selected environment
        run: echo "Selected environment is ${{ inputs.target_environment }} and ${{ secrets.DB_PASSWORD }}"

      - name: Local custom action
        uses: ./.github/actions/print_environment  # Caminho relativo para a action
        with:
          env_name: ${{ inputs.target_environment }}  # Passa os argumentos para a action
          
  build:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
    runs-on: [self-hosted, devsecops]       # Seleciona os Self-Hosted Runners através de suas labels (pode ser também runners hospedados pelo github: ubuntu-latest, windows-latest, macos-latest)
    needs: print
    name: Build

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build app
        run: |
          mkdir build
          echo "conteúdo gerado em ${{ github.sha }}" > build/app.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ github.ref_name }}-${{ github.sha }}-${{ github.run_number }}-try${{ github.run_attempt }}
          path: build/app.txt

  deploy-development:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    needs: build
    name: Deploy - Development
    environment: development

    steps:
      - name: Deploy automático para DEV
        run: echo "Deploy automático para o ambiente DEV"

  deploy-staging:
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.target_environment == 'staging' }}
    runs-on: ubuntu-latest
    name: Deploy - Staging
    environment: staging

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Baixar artefato
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.version }}

      - name: Deploy
        run: |
          echo "Deploy para STAGING"
          cat ${{ inputs.version }}/app.txt

  deploy-sandbox:
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.target_environment == 'sandbox' }}
    runs-on: ubuntu-latest
    name: Deploy - Sandbox
    environment: sandbox

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Baixar artefato
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.version }}

      - name: Deploy
        run: |
          echo "Deploy para SANDBOX"
          cat ${{ inputs.version }}/app.txt

  deploy-production:
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.target_environment == 'production' }}
    runs-on: ubuntu-latest
    name: Deploy - Production
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Baixar artefato
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.version }}

      - name: Deploy
        run: |
          echo "Deploy para PRODUÇÃO"
          cat ${{ inputs.version }}/app.txt
          
