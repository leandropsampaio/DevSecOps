name: Pipeline CI

on:
  push:
    branches:
      - main # REMOVERd
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build App
        run: |
          mkdir build
          echo "Build gerado em ${{ github.sha }}" > build/app.txt

      - name: Gerar nome da tag única
        id: tag
        run: |
          echo "tag_name=release-${GITHUB_REF##*/}-$(echo $GITHUB_SHA | cut -c1-10)-${GITHUB_RUN_NUMBER}-try${GITHUB_RUN_ATTEMPT}" >> $GITHUB_OUTPUT

      # -------------------------------------------------------------------------------------------------------------------------------------------------------------------
      - name: Criar Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          name: Build ${{ github.sha }}
          body: Build automático para commit ${{ github.sha }}
          draft: false
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload artefato para Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          files: build/app.txt
          token: ${{ secrets.GITHUB_TOKEN }}

      # -------------------------------------------------------------------------------------------------------------------------------------------------------------------
      - name: Login no GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build da imagem Docker
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/myapp:${{ steps.tag.outputs.image_tag }} .

      - name: Push da imagem para o GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/myapp:${{ steps.tag.outputs.image_tag }}

      - name: Criar release (opcional)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.image_tag }}
          name: Docker Image - ${{ steps.tag.outputs.image_tag }}
          body: Imagem Docker gerada e publicada no GHCR.
          token: ${{ secrets.GITHUB_TOKEN }}
