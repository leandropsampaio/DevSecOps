name: Pipeline CI

on:
  push:
    branches:
      - main # REMOVERd
      - develop
env:
  DOCKER_IMAGE_NAME: devsecops
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build App
        run: |
          mkdir build
          echo "Build gerado em ${{ github.sha }}" > build/app.txt

      - name: Gerar nome da tag Ãºnica
        id: tag
        run: |
          echo "tag_name=release-${GITHUB_REF##*/}-$(echo $GITHUB_SHA | cut -c1-10)-${GITHUB_RUN_NUMBER}-try${GITHUB_RUN_ATTEMPT}" >> $GITHUB_OUTPUT

      # - name: Upload local artifact (opcional)
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{ steps.tag.outputs.tag_name }}
      #     path: build

      - name: Login no GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build da imagem Docker
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.tag.outputs.tag_name }} .

      - name: Push da imagem para o GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.tag.outputs.tag_name }}

      - name: Criar release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          name: Docker Image - ${{ steps.tag.outputs.tag_name }}
          body: Imagem Docker gerada e publicada no GHCR.
          token: ${{ secrets.GITHUB_TOKEN }}
