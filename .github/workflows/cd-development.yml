name: CD - Deploy Development

on:
  workflow_run:
    workflows: ["Pipeline CI"]  # Nome do workflow do CI (deve bater exatamente)
    types:
      - completed
env:
  DOCKER_IMAGE_NAME: devsecops
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Instalar GitHub CLI
        run: sudo apt-get install -y gh

      - name: Autenticar no GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Buscar a última Release do repositório
        id: tag
        run: |
          TAG=$(gh release list --limit 1 --repo ${{ github.repository }} --json tagName --jq '.[0].tagName')
          echo "Última tag encontrada: $TAG"
          echo "image_tag=$TAG" >> $GITHUB_OUTPUT
          
      - name: Realizar Deploy
        run: |
          echo "Realizando Deploy da imagem: ghcr.io/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.tag.outputs.image_tag }}"
    
      # - name: Login no Azure (AKS)
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Obter contexto do AKS
      #   uses: azure/aks-set-context@v3
      #   with:
      #     resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
      #     cluster-name: ${{ secrets.AZURE_CLUSTER_NAME }}

      # - name: Aplicar imagem no deployment
      #   run: |
      #     kubectl set image deployment/my-deployment \
      #       my-container=ghcr.io/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE_NAME }}:${{ inputs.image_tag }} \
      #       --namespace=development

      # - name: Verificar rollout
      #   run: |
      #     kubectl rollout status deployment/my-deployment --namespace=development
